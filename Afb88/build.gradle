apply plugin: 'com.android.application'

android {
    signingConfigs {
        config {
            keyAlias 'nykj'
            keyPassword '123456'
            storeFile file('F:/keystore/afb88.keystore.jks')
            storePassword '123456'
        }
    }
    compileSdkVersion 25
    buildToolsVersion "25.0.0"
    defaultConfig {
        applicationId "com.nanyang.app"
        minSdkVersion 11
        targetSdkVersion 19
        versionCode 1
        versionName '1.66'
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "HOST_AFB", '"http;//www.afb1188.com"'
        signingConfig signingConfigs.config
    }
    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            buildConfigField "boolean", "LOG_DEBUG", "false"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.config
            debuggable true
            signingConfig signingConfigs.config
        }
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.config
            debuggable true
            signingConfig signingConfigs.config
        }
    }

    productFlavors {
        afb88 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "afb88"
            ]
            applicationId 'com.nanyang.app'
            versionName '1.75'
            buildConfigField "String", "HOST_AFB", '"http://main55.afb88.com/"'
        }
        afb1188 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "afb1188"
            ]
            applicationId 'com.nanyang.afb1188'
            versionName '1.00'
            buildConfigField "String", "HOST_AFB", '"http://www.afb1188.com/"'
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //    compile 'com.android.support:appcompat-v7:25.1.0'
    testCompile 'junit:junit:4.12'
    compile project(':baseLibs')
    compile 'com.tencent.bugly:crashreport:latest.release'
    compile 'com.guoqi.widget:highlightview:1.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'
}
